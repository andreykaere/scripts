#!/bin/bash
#ids=($(bspc query -N -n .hidden | rofi -dmenu))


num2roman() { # NUM
# Returns NUM in roman letters
#
    input=$1	# input num
    output=""	# Clear output string
    len=${#input}	# Initial length to count down
    
    roman_val() { # NUM one five ten
    # This sub does the basic 'roman' algorythm
    #
        N=$1
        one=$2
        five=$3
        ten=$4
        out=""
        
        case $N in
        0)	out+=""	;;
        [123])	while [[ $N -gt 0 ]]
            do	out+="$one"
                N=$(($N-1))
            done
            ;;
        4)	out+="$one$five"	;;
        5)	out+="$five"	;;
        [678])	out+="$five"
            N=$(($N-5))
            while [[ $N -gt 0 ]]
            do	out+="$one"
                N=$(($N-1))
            done
            ;;
        9)	while [[ $N -lt 10 ]]
            do	out+="$one"
                N=$(($N+1))
            done
            out+="$ten"
            ;;
        esac
        echo $out
    }
    
    while [[ $len -gt 0  ]]
    do	# There are letters to add
        num=${input:0:1}
        # Do action according position
        case $len in
        1)	# 1
            output+="$(roman_val $num I V X)"
            ;;
        2)	# 10
            output+="$(roman_val $num X L C)"
            ;;
        3)	# 100
            output+="$(roman_val $num C D M)"
            ;;
        *)	# 1000+
            # 10'000 gets a line above, 100'000 gets a line on the left.. how to?
            num=${input:0:(-3)}
            while [[ $num -gt 0 ]]
            do	output+="M"
                num=$(($num-1))
            done
            
            ;;
        esac
        input=${input:1} ; len=${#input}
    done
    echo $output
}





windows=($(bspc query -N -n .window.hidden))
index="$(for i in "${!windows[@]}"
        do
        grep -q "^${windows[i]}$" /tmp/system-hidden;

        if [ $? -ne 0 ]; then
            name="$(xprop -id ${windows[i]} WM_NAME | cut -d\" -f2)"
            class="$(xprop -id ${windows[i]} WM_CLASS | cut -d\" -f2)"
            desk=$((i+1))
            
            # https://stackoverflow.com/questions/1538676/uppercasing-first-letter-of-words-using-sed
            echo -en "$i window $(num2roman $desk)   $(echo "$class" | sed -e "s/\b\(.\)/\u\1/g")   $name\0icon\x1f$class\n"
        fi
        done | rofi -p "Show window" -dmenu)" 


# rim_index="$(echo "$index" | awk '{print $2}')"


# num_index=$(
#     echo "$rim_index" |
#     sed 's/CM/DCD/g' |
#     sed 's/M/DD/g' |
#     sed 's/CD/CCCC/g' |
#     sed 's/D/CCCCC/g' |
#     sed 's/XC/LXL/g' |
#     sed 's/C/LL/g' |
#     sed 's/XL/XXXX/g' |
#     sed 's/L/XXXXX/g' |
#     sed 's/IX/VIV/g' |
#     sed 's/X/VV/g' |
#     sed 's/IV/IIII/g' |
#     sed 's/V/IIIII/g' |
#     tr -d '\n' |
#     wc -m
# )

# num_index=$((num_index-1))

#echo "${index%% *}"
re='^[0-9]+$'

if [[ "${index%% *}" =~ $re ]]; then  #if esc key was pressed or nothing selected
    #xdo show "${windows[${index%% *}]}"
    bspc node "${windows[${index%% *}]}" -g hidden=off -f
    #bspc node "${windows[${index%% *}]}" -f
fi

#bspc node "$node" -g hidden=off
#bspc node "$node" -n focused
#bspc node "$node" -f

#xprop -id "$id" WM_NAME | cut -d\" -f2
